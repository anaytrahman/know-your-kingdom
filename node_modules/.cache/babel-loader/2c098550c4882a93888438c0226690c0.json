{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\anaytrahman\\\\know-your-kingdom\\\\src\\\\Components\\\\myCountry\\\\Countries.js\",\n    _s = $RefreshSig$();\n\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect, useRef, useState } from 'react';\nimport A from './A'; // import Paper from '@material-ui/core/Paper';\n// import Fade from '@material-ui/core/Fade';\n// import { makeStyles } from '@material-ui/core/styles';\n// const [checked, setChecked] = React.useState(false);\n\nimport ShowCountries from './ShowCountries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [showMoreDetails, setShowMoreDetails] = useState(false);\n  const [searchData, setSearchData] = useState('');\n  const [showCountry, setShowCountry] = useState(false);\n  const [errMsg, setErrMsg] = useState(false); // const classes = useStyles();\n\n  const searchInp = useRef(null);\n  useEffect(() => {\n    fetch('https://restcountries.eu/rest/v2/all').then(res => res.json()).then(result => {\n      setCountries(result);\n      console.log('result', result);\n      localStorage.setItem(\"countries\", JSON.stringify(result));\n    }).catch(e => {\n      const dataFromLocalStorage = JSON.parse(localStorage.getItem(\"countries\"));\n      console.log('localStro', dataFromLocalStorage);\n      setCountries(dataFromLocalStorage);\n    });\n\n    if (filteredCountry.length > 0) {\n      setErrMsg(true);\n    }\n  }, []);\n\n  const clickHandler = () => {\n    alert('Search button Clicked');\n  };\n\n  const showHandler = () => {\n    setShowCountry(true);\n  };\n\n  const filteredCountry = countries.filter(country => {\n    const searchDataStr = searchData.toLocaleLowerCase().trim();\n\n    const altSpelling = () => {\n      return country.altSpellings.filter(item => item === searchData.trim());\n    }; //    let searchSource = toLowerCase().includes(searchData.toLocaleLowerCase())\n\n\n    if (country.name && country.name.toLowerCase().includes(searchDataStr) || country.capital && country.capital.toLowerCase().includes(searchDataStr) || country.nativeName && country.nativeName.toLowerCase().includes(searchDataStr) || altSpelling()[0] && altSpelling()[0].toLowerCase().includes(searchDataStr)) {\n      return country;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"warning\",\n          children: \"Search and Know about the Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"search-input\",\n            id: \"standard-search\",\n            label: \"Eg: India\",\n            type: \"search\",\n            onChange: e => {\n              setSearchData(e.target.value);\n            },\n            inputRef: searchInp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-wrap\",\n          children: showCountry === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showHandler,\n            className: \"btn btn-secondary mt-3 btns mr-4\",\n            children: \"Show All Countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: filteredCountry.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowCountry(false);\n              },\n              className: \"btn btn-danger mt-3 btns mr-4\",\n              children: \"Hide Countries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShowCountries, {\n      countries: countries,\n      showCountry: showCountry,\n      filteredCountry: filteredCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"NyUHdX2WpW6gNvyVFv3q55MXp7M=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["D:/github/anaytrahman/know-your-kingdom/src/Components/myCountry/Countries.js"],"names":["TextField","useEffect","useRef","useState","A","ShowCountries","Countries","countries","setCountries","showMoreDetails","setShowMoreDetails","searchData","setSearchData","showCountry","setShowCountry","errMsg","setErrMsg","searchInp","fetch","then","res","json","result","console","log","localStorage","setItem","JSON","stringify","catch","e","dataFromLocalStorage","parse","getItem","filteredCountry","length","clickHandler","alert","showHandler","filter","country","searchDataStr","toLocaleLowerCase","trim","altSpelling","altSpellings","item","name","toLowerCase","includes","capital","nativeName","target","value"],"mappings":"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","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport A from './A';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Fade from '@material-ui/core/Fade';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// const [checked, setChecked] = React.useState(false);\r\n\r\nimport ShowCountries from './ShowCountries';\r\nconst Countries = () => {\r\n    const [countries, setCountries] = useState([]);\r\n    const [showMoreDetails, setShowMoreDetails] = useState(false);\r\n    const [searchData, setSearchData] = useState('');\r\n\r\n    const [showCountry, setShowCountry] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState(false);\r\n\r\n    // const classes = useStyles();\r\n\r\n\r\n    const searchInp = useRef(null);\r\n    useEffect(() => {\r\n\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                setCountries(result);\r\n                console.log('result', result)\r\n\r\n                localStorage.setItem(\"countries\", JSON.stringify(result));\r\n\r\n            }).catch(e => {\r\n                const dataFromLocalStorage = JSON.parse(localStorage.getItem(\"countries\"));\r\n                console.log('localStro', dataFromLocalStorage)\r\n                setCountries(dataFromLocalStorage);\r\n            });\r\n\r\n        if (filteredCountry.length > 0) {\r\n            setErrMsg(true)\r\n        }\r\n    }, []);\r\n\r\n    const clickHandler = () => {\r\n        alert('Search button Clicked')\r\n    }\r\n\r\n    const showHandler = () => {\r\n        setShowCountry(true);\r\n    }\r\n\r\n\r\n    const filteredCountry = countries.filter(country => {\r\n        const searchDataStr = searchData.toLocaleLowerCase().trim();\r\n        const altSpelling = () => {\r\n            return country.altSpellings.filter((item) => item === searchData.trim())\r\n        }\r\n\r\n        //    let searchSource = toLowerCase().includes(searchData.toLocaleLowerCase())\r\n        if (\r\n            country.name && country.name.toLowerCase().includes(searchDataStr)\r\n            ||\r\n            country.capital && country.capital.toLowerCase().includes(searchDataStr)\r\n            || \r\n            country.nativeName && country.nativeName.toLowerCase().includes(searchDataStr)\r\n            ||\r\n            altSpelling()[0] && altSpelling()[0].toLowerCase().includes(searchDataStr)\r\n\r\n        ) {\r\n            return country;\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"action-wrapper\">\r\n                <div>{\r\n                   \r\n                    <h3 className=\"warning\">Search and Know about the Country</h3>\r\n                }\r\n\r\n                </div>\r\n                <div className=\"search-wrapper\">\r\n\r\n                    \r\n                    <div>\r\n                        {\r\n                            \r\n                            <TextField className=\"search-input\" id=\"standard-search\" label=\"Eg: India\" type=\"search\"\r\n                                onChange={(e) => {\r\n                                    setSearchData(e.target.value);\r\n                                }}\r\n                                inputRef={searchInp}\r\n\r\n                            />\r\n\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n\r\n                        {showCountry === true ?\r\n                            <button onClick={showHandler} className=\"btn btn-secondary mt-3 btns mr-4\">Show All Countries</button> :\r\n                            <div>\r\n                                {\r\n                                    filteredCountry.length > 0 &&\r\n                                    <button onClick={() => { setShowCountry(false) }} className=\"btn btn-danger mt-3 btns mr-4\">Hide Countries</button>\r\n\r\n                                }\r\n\r\n                            </div>\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* country show */}\r\n\r\n\r\n\r\n\r\n\r\n            <ShowCountries\r\n\r\n                countries={countries}\r\n                showCountry={showCountry}\r\n                filteredCountry={filteredCountry}\r\n            />\r\n            {/* <A nium={124} hidauy={\"hi i am hidayt\"} countries={countries} /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countries;"]},"metadata":{},"sourceType":"module"}